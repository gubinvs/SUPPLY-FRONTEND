import React, { useState, useEffect } from "react";
import ApiUrl from "../../js/ApiUrl";
import { ROLE_PROVIDER, ROLE_CUSTOMER, ROLE_ADMIN } from "../../js/roleMap.js";

const InformationAddCompanyCardContent = ({ role, guidIdCollaborator }) => {
    const isAdmin = role === "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä";

    const [formData, setFormData] = useState({
        guidIdCompany: "f8617fbf",
        fullNameCompany: "",
        abbreviatedNameCompany: "",
        innCompany: "",
        addressCompany: "",
        roleCompany: "", // üëà –î–æ–±–∞–≤–∏–ª–∏
        guidIdCollaborator: guidIdCollaborator
    });
console.log(formData);
console.log(guidIdCollaborator);

    const [companyFound, setCompanyFound] = useState(false);

    const handleChange = (e) => {
        const { name, value } = e.target;
        setFormData((prevState) => ({
            ...prevState,
            [name]: value,
        }));
    };

    useEffect(() => {
        const fetchCompanyByInn = async () => {
            if (![10, 12].includes(formData.innCompany.length)) return; // –ò–ù–ù: 10 –∏–ª–∏ 12 —Ü–∏—Ñ—Ä

            try {
                const response = await fetch(`${ApiUrl}/api/ReturnListCompany`);
                if (!response.ok) {
                    setCompanyFound(false);
                    return;
                }

                const result = await response.json();
                const companies = result.company;

                const found = companies.find(
                    c => String(c.innCompany) === formData.innCompany
                );

                if (found) {
                    setFormData((prev) => ({
                        ...prev,
                        guidIdCompany: found.guidIdCompany,
                        fullNameCompany: found.fullNameCompany || "",
                        abbreviatedNameCompany: found.abbreviatedNameCompany || "",
                        addressCompany: found.addressCompany || ""
                    }));
                    setCompanyFound(true);
                } else {
                    setCompanyFound(false);
                }

            } catch (error) {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ –ò–ù–ù:", error);
                setCompanyFound(false);
            }
        };

        fetchCompanyByInn();
    }, [formData.innCompany]);


    const handleSubmit = async (e) => {
        e.preventDefault();

        try {
            const response = await fetch(`${ApiUrl}/api/AddInformationCompany`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(formData),
            });

            const result = await response.json();

            if (!response.ok) {
                throw new Error(result.message || "–û—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ");
            }

            window.location = window.location.href;
        } catch (err) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:", err);
            alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: " + (err.message || err.toString()));
        }
    };

    return (
        <>
            <button
                type="button"
                className="btn btn-success information-company-card__edit-botton"
                onClick={handleSubmit}
            >
                –ó–∞–ø–∏—Å–∞—Ç—å
            </button>
            <div className="information-company-card__title">–†–µ–∫–≤–∏–∑–∏—Ç—ã –∫–æ–º–ø–∞–Ω–∏–∏:</div>
            <div className="information-company-card__title_fon"></div>
            <ul className="information-company-card__list">
                <li className="information-company-card__item">
                    <div className="information-company-card__item_title">–ü–æ–ª–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ:</div>
                    <input
                        className="form-control"
                        type="text"
                        name="fullNameCompany"
                        value={formData.fullNameCompany}
                        onChange={handleChange}
                        aria-label="–ü–æ–ª–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ"
                    />
                </li>
                <li className="information-company-card__item">
                    <div className="information-company-card__item_title">–°–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ:</div>
                    <input
                        className="form-control"
                        type="text"
                        name="abbreviatedNameCompany"
                        value={formData.abbreviatedNameCompany}
                        onChange={handleChange}
                        aria-label="–°–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ"
                    />
                </li>
                <li className="information-company-card__item">
                    <div className="information-company-card__item_title">–ò–ù–ù:</div>
                    <input
                        className="form-control"
                        type="text"
                        name="innCompany"
                        value={formData.innCompany}
                        onChange={handleChange}
                        aria-label="–ò–ù–ù"
                    />
                    {companyFound && (
                        <div className="text-success small mt-1">–ö–æ–º–ø–∞–Ω–∏—è –Ω–∞–π–¥–µ–Ω–∞, –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</div>
                    )}
                </li>
                <li className="information-company-card__item">
                    <div className="information-company-card__item_title">–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å:</div>
                    <input
                        className="form-control"
                        type="text"
                        name="addressCompany"
                        value={formData.addressCompany}
                        onChange={handleChange}
                        aria-label="–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å"
                    />
                </li>

                {isAdmin && (
                <div className="information-company-card__item">
                    <div className="information-company-card__item_title">–†–æ–ª—å –∫–æ–º–ø–∞–Ω–∏–∏:</div>
                    <select
                        className="form-select"
                        name="roleCompany"
                        value={formData.roleCompany}
                        onChange={handleChange}
                    >
                        <option value="">–í—ã–±—Ä–∞—Ç—å —Ä–æ–ª—å</option>
                        <option value={ROLE_PROVIDER}>–ü–æ—Å—Ç–∞–≤—â–∏–∫</option>
                        <option value={ROLE_CUSTOMER}>–ó–∞–∫–∞–∑—á–∏–∫</option>
                    </select>
                </div>
                )}
            </ul>
        </>
    );
};

export default InformationAddCompanyCardContent;
