import React, { useState, useEffect } from "react";
import ApiUrl from "../js/ApiUrl.js";
import "./EditPriceComponent.css";

const EditPriceComponent = () => {
    const [component, setComponent] = useState("");
    const [providers, setProviders] = useState([]);
    const [article, setArticle] = useState("");
    const [price, setPrice] = useState("");
    const [deliveryTime, setDeliveryTime] = useState("");
    const [selectedProvider, setSelectedProvider] = useState("");
    const [name, setName] = useState('');
    const [isSearched, setIsSearched] = useState(false);
    const [offers, setOffers] = useState([]); // üëà –¥–æ–±–∞–≤–ª–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ —Ü–µ–Ω

    useEffect(() => {
        fetch(ApiUrl + "/api/ReturnListProvider")
            .then((response) => {
                if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤");
                return response.json();
            })
            .then((data) => {
                setProviders(data.providers);

                const savedArticle = sessionStorage.getItem('lastAddedArticle');
                if (savedArticle) {
                    setArticle(savedArticle);
                    sessionStorage.removeItem('lastAddedArticle');
                }
            })
            .catch((error) => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤:", error));
    }, []);

    const handleSearchComponent = () => {
        if (!article.trim()) return;

        setIsSearched(true);

        fetch(`${ApiUrl}/api/ReturnDataArticle/${encodeURIComponent(article)}`)
            .then((response) => {
                if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞");
                return response.json();
            })
            .then((data) => {
                setComponent(data.component);
                setPrice("");
                setDeliveryTime("");
                setSelectedProvider("");

                // üëá –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
                fetch(`${ApiUrl}/api/ReturnPriceProviderArticle/${encodeURIComponent(article)}`)
                    .then(res => res.ok ? res.json() : Promise.reject("–û—à–∏–±–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π"))
                    .then(data => {
                        setOffers(data.offers || []);
                    })
                    .catch(error => {
                        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ —Ü–µ–Ω:", error);
                        setOffers([]);
                    });
            })
            .catch((error) => {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:", error);
                setComponent(null);
                setOffers([]);
            });
    };

    const handleEditComponent = () => {
        if (!price || !deliveryTime || !selectedProvider) {
            alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º.");
            return;
        }

        const payload = {
            vendorCodeComponent: component.vendorCodeComponent,
            guidIdProvider: selectedProvider,
            priceComponent: parseFloat(price),
            deliveryTimeComponent: deliveryTime
        };

        fetch(ApiUrl + "/api/ChangePrice", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(payload)
        })
        .then((response) => {
            if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏");
            alert("–ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!");
            window.location.reload();
        })
        .catch((error) => {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏:", error);
            alert("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è.");
        });
    };

    const handleAddComponent = async () => {
        if (!article || !name) {
            alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±–∞ –ø–æ–ª—è');
            return;
        }

        try {
            const response = await fetch(ApiUrl + '/api/AddComponent', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ vendorCodeComponent: article, nameComponent: name })
            });

            if (response.ok) {
                alert('–ö–æ–º–ø–æ–Ω–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!');
                sessionStorage.setItem('lastAddedArticle', article);
                window.location.reload();
            } else {
                const errorText = await response.text();
                alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏: ${errorText}`);
            }
        } catch (error) {
            alert(`–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: ${error}`);
        }
    };

    return (
        <div className="container edit-price-component__container">
            <h4 className="edit-price-component__h4">–í–Ω–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –æ —Ü–µ–Ω–∞—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:</h4>
            <div className="input-group mb-3 edit-price-component__search-block">
                <input
                    type="text"
                    className="form-control"
                    placeholder="–ê—Ä—Ç–∏–∫—É–ª"
                    value={article}
                    onChange={(e) => setArticle(e.target.value)}
                    aria-label="–ê—Ä—Ç–∏–∫—É–ª"
                    aria-describedby="button-addon2"
                />
                <button className="btn btn-outline-secondary" type="button" id="button-addon2" onClick={handleSearchComponent}>
                    –ù–∞–π—Ç–∏
                </button>
            </div>

            {!component ? (
                <>
                    {isSearched && !component ? (
                        <>
                            <h4 className="edit-price-component__h4">–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç:</h4>
                            <div className="input-group mb-3">
                                <input
                                    type="text"
                                    className="form-control"
                                    placeholder="–ê—Ä—Ç–∏–∫—É–ª"
                                    value={article}
                                    onChange={(e) => setArticle(e.target.value)}
                                />
                                <input
                                    type="text"
                                    className="form-control"
                                    placeholder="–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ"
                                    value={name}
                                    onChange={(e) => setName(e.target.value)}
                                />
                                <button className="btn btn-outline-secondary" type="button" onClick={handleAddComponent}>
                                    –î–æ–±–∞–≤–∏—Ç—å –≤ –±–∞–∑—É
                                </button>
                            </div>
                        </>
                    ) : null}
                </>
            ) : (
                <>
                    <table className="table">
                        <thead>
                            <tr>
                                <th>–ê—Ä—Ç–∏–∫—É–ª</th>
                                <th>–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ</th>
                                <th>–¶–µ–Ω–∞</th>
                                <th>–°—Ä–æ–∫ –ø–æ—Å—Ç–∞–≤–∫–∏</th>
                                <th>–ü–æ—Å—Ç–∞–≤—â–∏–∫</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>{component.vendorCodeComponent}</td>
                                <td>{component.nameComponent}</td>
                                <td>
                                    <input
                                        className="form-control"
                                        type="number"
                                        placeholder="–ù–æ–≤–∞—è —Ü–µ–Ω–∞"
                                        value={price}
                                        onChange={(e) => setPrice(e.target.value)}
                                    />
                                </td>
                                <td>
                                    <select
                                        className="form-select"
                                        value={deliveryTime}
                                        onChange={(e) => setDeliveryTime(e.target.value)}
                                    >
                                        <option value="">C—Ä–æ–∫ –ø–æ—Å—Ç–∞–≤–∫–∏</option>
                                        <option value="–í –Ω–∞–ª–∏—á–∏–∏">–í –Ω–∞–ª–∏—á–∏–∏</option>
                                        <option value="–æ—Ç 1 –¥–æ 4 –Ω–µ–¥">–æ—Ç 1 –¥–æ 4 –Ω–µ–¥</option>
                                        <option value="–æ—Ç 4 –¥–æ 8 –Ω–µ–¥">–æ—Ç 4 –¥–æ 8 –Ω–µ–¥</option>
                                        <option value="–æ—Ç 8 –¥–æ 12 –Ω–µ–¥">–æ—Ç 8 –¥–æ 12 –Ω–µ–¥</option>
                                        <option value="–æ—Ç 12 –¥–æ 16 –Ω–µ–¥">–æ—Ç 12 –¥–æ 16 –Ω–µ–¥</option>
                                        <option value="–æ—Ç 16 –¥–æ 20 –Ω–µ–¥">–æ—Ç 6 –¥–æ 20 –Ω–µ–¥</option>
                                        <option value="–æ—Ç 20 –¥–æ 24 –Ω–µ–¥">–æ—Ç 20 –¥–æ 24 –Ω–µ–¥</option>
                                    </select>
                                </td>
                                <td>
                                    <select
                                        className="form-select"
                                        value={selectedProvider}
                                        onChange={(e) => setSelectedProvider(e.target.value)}
                                    >
                                        <option value="">–í—ã–±–µ—Ä–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞</option>
                                        {providers.map((item) => (
                                            <option key={item.guidIdProvider} value={item.guidIdProvider}>
                                                {item.nameProvider}
                                            </option>
                                        ))}
                                    </select>
                                </td>
                                <td>
                                    <button type="button" className="btn btn-outline-success" onClick={handleEditComponent}>
                                        –ó–∞–ø–∏—Å–∞—Ç—å
                                    </button>
                                </td>
                            </tr>
                        </tbody>
                    </table>

                    {/* üëá –í–¢–û–†–ê–Ø –¢–ê–ë–õ–ò–¶–ê ‚Äî –∏—Å—Ç–æ—Ä–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π */}
                    {offers.length > 0 && (
                        <>
                            <h5 className="mt-4">–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —ç—Ç–æ–º—É –∞—Ä—Ç–∏–∫—É–ª—É:</h5>
                            <table className="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>–ü–æ—Å—Ç–∞–≤—â–∏–∫</th>
                                        <th>–¶–µ–Ω–∞</th>
                                        <th>–°—Ä–æ–∫ –ø–æ—Å—Ç–∞–≤–∫–∏</th>
                                        <th>–î–∞—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {offers.map((offer, index) => (
                                        <tr key={index}>
                                            <td>{offer.nameProvider}</td>
                                            <td>{offer.priceComponent.toLocaleString('ru-RU')} ‚ÇΩ</td>
                                            <td>{offer.deliveryTimeComponent}</td>
                                            <td>{new Date(offer.saveDataPrice).toLocaleDateString('ru-RU')}</td>
                                        </tr>
                                    ))}
                                </tbody>
                            </table>
                        </>
                    )}
                </>
            )}
        </div>
    );
};

export default EditPriceComponent;
