import {token} from "../../token.js";

///
/// –ó–∞–ø—Ä–æ—Å API (https://dadata.ru/api/find-party/) –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–µ –ø–æ –µ–≥–æ –ò–ù–ù
///


async function returnDataPrivider(innProvider) {

    try {
        const response = await fetch("https://suggestions.dadata.ru/suggestions/api/4_1/rs/findById/party", {
            method: "POST", // üîß –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û!
            mode: "cors",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json",
                "Authorization": "Token " + token 
            },
            body: JSON.stringify({ query: innProvider })
        });

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const data = await response.json();


        // –ú–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å —Å–∞–º—É –∫–æ–º–ø–∞–Ω–∏—é
        if (data.suggestions && data.suggestions.length > 0) {
            return data.suggestions[0]; // –ø–µ—Ä–≤–∞—è –Ω–∞–π–¥–µ–Ω–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è
        } else {
            console.warn("–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ –ò–ù–ù");
            return null;
        }

    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:", error);
        return null;
    }
}

export default returnDataPrivider;